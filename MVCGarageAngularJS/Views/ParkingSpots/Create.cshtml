@model MVCGarage.ViewModels.ParkingSpots.CreateParkingSpotsVM

@{
    ViewBag.Title = "Create a new parking spot";
}

<div class="header jumbotron">
    <h1>Create a parking spot</h1>
    <hr />
    <p>This is where you can create a new parking spot</p>
    <p style="color:red">@Model.ErrorMessage</p>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal about-body-text" style="color: white; font-size: 1em;">
        <h2 style="text-align:center;">ParkingSpot</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ParkingSpot.VehicleType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ParkingSpot.VehicleTypeID,
                                      (IEnumerable<SelectListItem>)ViewBag.SelectVehicleTypes,
                                      htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ParkingSpot.VehicleTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.ParkingSpot.Label, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParkingSpot.Label,
                new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control",
                        placeholder = "Spot's label",
                        required = "required"
                    }
                })
                @Html.ValidationMessageFor(model => model.ParkingSpot.Label, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.ParkingSpot.VehicleType.DefaultFee.Fee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ Html.EnableClientValidation(false); }
                @{
                    string toolTip = "Default fee values:";
                    toolTip += string.Format("{0}{1}{0}", Environment.NewLine, new string('-', 19));
                    foreach (MVCGarage.Models.DefaultFee defaultFee in Model.DefaultFees)
                    {
                        string text = string.Format("{0}: {1:N2}/min.",
                                                    defaultFee.VehicleType.Type,
                                                    defaultFee.Fee);

                        toolTip += string.Format("{0}{1}",
                                                 text,
                                                 string.Format("{0}{1}{0}",
                                                               Environment.NewLine,
                                                               new string('-', text.Length)));
                    }
                }
                @Html.EditorFor(model => model.ParkingSpot.VehicleType.DefaultFee.Fee,
                                new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control",
                                        placeholder = "Hover for info about default values",
                                        @title = toolTip
                                    }
                                })
                @{ Html.EnableClientValidation(true); }
                @Html.ValidationMessageFor(model => model.ParkingSpot.VehicleType.DefaultFee.Fee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
